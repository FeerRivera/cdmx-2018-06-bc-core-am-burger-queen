{"version":3,"sources":["Configg/Fire.js","Components/Login.js","Components/Almuerzo.js","Components/Resbqueen.js","Components/Bqueen.js","Components/Home.js","Components/App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","e","preventDefault","console","log","target","auth","signInWithEmailAndPassword","state","email","password","then","u","catch","error","handleAuth","provider","GoogleAuthProvider","signInWithPopup","result","concat","user","code","message","handleChange","bind","assertThisInitialized","setState","defineProperty","name","value","react_default","a","createElement","className","onSubmit","class","for","onChange","type","id","aria-describedby","placeholder","bsStyle","Component","Breakfast","prop","click","text","handleClick","food","price","_this2","onClick","data-tag","data-value","ResultBreak","operations","push","forEach","obj","total","parseInt","handleDelete","filter","index","i","data","Desayuno","map","menudinner","Almuerzo","key","menu","ResultDinner","App","clickBreakfast","showDinner","showBreak","clickDinner","Resbqueen","Bqueen","Appp","authListener","onAuthStateChanged","localStorage","setItem","uid","removeItem","Home","Components_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","Components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.734f58c7.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAIdxFCF9PhOOEEPd1Mful2LXSgkliMBvs\",\r\n    authDomain: \"bqueen-7c5b2.firebaseapp.com\",\r\n    databaseURL: \"https://bqueen-7c5b2.firebaseio.com\",\r\n    projectId: \"bqueen-7c5b2\",\r\n    storageBucket: \"bqueen-7c5b2.appspot.com\",\r\n    messagingSenderId: \"989574352784\"\r\n  };\r\n const fire = firebase.initializeApp(config);\r\n export default fire;","import React, { Component } from \"react\";\r\nimport fire from \"../Configg/Fire\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    login =(e)=> {\r\n        e.preventDefault();\r\n        console.log(e.target);\r\n\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => { })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n     handleAuth = () => {\r\n\r\n       const provider = new fire.auth.GoogleAuthProvider();\r\n\r\n       fire.auth().signInWithPopup(provider)\r\n         .then(result => console.log(`${result.user.email}Ha iniciado sesión`))\r\n         .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"col-md-10\" >\r\n                <form onSubmit={this.login}>\r\n                    <div class = \"form-group\" >\r\n                        <label for = \"exampleInputEmail1\" > Correo\r\n                        </label>\r\n                            <input value = { this.state.email } onChange = { this.handleChange } type = \"email\" name = \"email\" className = \"form-control\" id = \"exampleInputEmail1\" aria-describedby = \"emailHelp\"  placeholder = \"correo\"/>\r\n                                <small id = \"emailHelp\" class = \"form-text text-muted\">\r\n                                </small>\r\n                    </div>\r\n                        <div class = \"form-group\">\r\n                            <label for = \"exampleInputPassword1\" > Contraseña\r\n                            </label>\r\n                                 <input value = { this.state.password } onChange ={ this.handleChange } type = \"password\" name = \"password\" class = \"form-control\" id = \"exampleInputPassword1\" placeholder = \"contraseña\"/>\r\n                        </div>\r\n                            < button bsStyle = \"primary\" type = \"submit\" className=\"btn btn-primary\" > Iniciar Sesion\r\n                            </button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n    export default Login;\r\n","import React, { Component } from 'react';\r\n\r\nclass Breakfast extends Component {\r\n    constructor(prop) {\r\n        super(prop)\r\n        this.food = prop.food\r\n        this.price = prop.price\r\n        this.text=`${this.food} ${this.price}`\r\n    }\r\n    click=(text)=>{\r\n        this.props.handleClick(this.text,this.food,this.price)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n              <div\r\n              onClick={()=>{this.click(this.text,this.food,this.price)}}\r\n              className=\"Button\"\r\n              data-tag={this.text}\r\n              data-value={this.price}\r\n              >\r\n                 {this.food} ${this.price}\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Breakfast;\r\n","import React, { Component } from 'react';\r\nimport data from '../menu.json'\r\nimport Almuerzo from './Almuerzo';\r\n\r\nclass ResultBreak extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { operations: [], total: 0 }\r\n  }\r\n  handleClick = (text,food,price) => {\r\n    const array = this.state.operations\r\n    // const price = e.target.getAttribute('data-value')\r\n    // const total = e.target.getAttribute('data-tag');\r\n    array.push({ type: food, price: price });\r\n    this.state.operations.forEach((obj) => {\r\n      this.setState({ total: this.state.total + parseInt(obj.price) })\r\n    })\r\n  }\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      operations: this.state.operations.filter((e, index) => {\r\n        return index !== id\r\n      }),\r\n    })\r\n    this.state.operations.forEach((e, i) => {\r\n      if (i === id) {\r\n        this.setState({ total: this.state.total - parseInt(e.price) })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                {data.Desayuno.map((menudinner, i) => {\r\n                  return (<Almuerzo\r\n                    handleClick={this.handleClick}\r\n                    food={menudinner.type}\r\n                    price={menudinner.price}\r\n                    key={i}\r\n                    id={i}\r\n                  />);\r\n                })\r\n                }\r\n              </div>\r\n              <div className=\"col-6 \">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <form>\r\n                    <label className=\"d-flex justify-content-center\">\r\n                      Ingrese su nombre\r\n                    </label><br></br>\r\n                    <input id='myInput' onChange={this.handleChange} />\r\n                  </form>\r\n                </div>\r\n\r\n                  <div>\r\n                    {this.state.operations.map((menu, i) => {\r\n                      return (\r\n                        <div className=\"card\" key={i}>\r\n                          {menu.type}$.{menu.price}\r\n                          <span className=\"close\" onClick={() => this.handleDelete(i)}>\r\n                            x\r\n                        </span>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                  <p>Total = {this.state.total}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    export default ResultBreak;\r\n","import React, { Component } from 'react';\r\nimport data from '../menu.json'\r\nimport Almuerzo from './Almuerzo';\r\n\r\nclass ResultDinner extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { operations: [], total: 0 }\r\n  }\r\n  handleClick = (text,food,price) => {\r\n    const array = this.state.operations\r\n\r\n    array.push({ type: food, price: price });\r\n    this.state.operations.forEach((obj) => {\r\n      this.setState({ total: this.state.total + parseInt(obj.price) })\r\n    })\r\n  }\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      operations: this.state.operations.filter((e, index) => {\r\n        return index !== id\r\n      }),\r\n    })\r\n    this.state.operations.forEach((e, i) => {\r\n      if (i === id) {\r\n        this.setState({ total: this.state.total - parseInt(e.price) })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                {data.Almuerzo.map((menudinner, i) => {\r\n                  return (<Almuerzo\r\n                    handleClick={this.handleClick}\r\n                    food={menudinner.type}\r\n                    price={menudinner.price}\r\n                    key={i}\r\n                    id={i}\r\n                  />);\r\n                })\r\n                }\r\n              </div>\r\n              <div className=\"col-6 \">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <form>\r\n                    <label className=\"d-flex justify-content-center\">\r\n                      Ingrese su nombre\r\n                    </label><br></br>\r\n                    <input id='myInput' onChange={this.handleChange} />\r\n                  </form>\r\n                </div>\r\n                <div>\r\n                  {this.state.operations.map((menu, i) => {\r\n                    return (\r\n                      <div className=\"card\" key={i}>\r\n                        {menu.type}$.{menu.price}\r\n                        <span className=\"close\" onClick={() => this.handleDelete(i)}>\r\n                          x\r\n                        </span>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <p>Total = {this.state.total}</p>\r\n                <button type='button'>\r\n                  Enviar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ResultDinner;\r\n","import React, { Component } from 'react';\r\nimport ResultBreak from './Resbqueen';\r\nimport ResultDinner from './Bqueen';\r\nimport '../App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showBreak: true,\r\n      showDinner: false,\r\n    };\r\n  }\r\n  clickBreakfast = () => {\r\n    this.setState({ showDinner: false, showBreak: true });\r\n  }\r\n  clickDinner = (e) => {\r\n    this.setState({ showDinner: true, showBreak: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar text-white\">\r\n          <h4>BURGER QUEEN🍔👑</h4>\r\n        </nav>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6 buttons\">\r\n                  <div className=\"btn \" onClick={this.clickBreakfast}>Desayuno</div>\r\n                  <div className=\"btn \" onClick={this.clickDinner}>Almuerzo</div>\r\n                </div>\r\n                <div className=\"col-6 \">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {this.state.showBreak ? <ResultBreak /> : null}\r\n        </div>\r\n        <div >\r\n          {this.state.showDinner ? <ResultDinner /> : null}\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport fire from \"../Configg/Fire\";\r\nimport Login from './Login';\r\nimport Home from './Home';\r\n\r\nclass Appp extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      user:{},\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      console.log(user);\r\n      if (user) {\r\n        this.setState({\r\n          user\r\n        });\r\n        localStorage.setItem('user', user.uid);\r\n      } else {\r\n        this.setState({\r\n          user: null\r\n        });\r\n        localStorage.removeItem('user');\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n    {this.state.user ? (<Home />) : (<Login />)}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Appp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}